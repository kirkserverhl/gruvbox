#!/usr/bin/env bash
# reset environment variables that could interfere with normal usage
unset -v GREP_OPTIONS
# put all utility functions here

# make a temporary file
git_extra_mktemp() {
    mktemp -t "$(basename "$0")".XXXXXXX
}

git_extra_default_branch() {
    local extras_default_branch init_default_branch
    extras_default_branch=$(git config --get git-extras.default-branch)
    init_default_branch=$(git config --get init.defaultBranch)
    if [ -n "$extras_default_branch" ]; then
        echo "$extras_default_branch"
    elif [ -n "$init_default_branch" ]; then
        echo "$init_default_branch"
    else
        echo "main"
    fi
}
#
# check whether current directory is inside a git repository
#

is_git_repo() {
  git rev-parse --show-toplevel > /dev/null 2>&1
  result=$?
  if test $result != 0; then
    >&2 echo 'Not a git repo!'
    exit $result
  fi
}

is_git_repo

set -euo pipefail

function discover_op() {
  local gitdir
  # git rev-parse emits an error if not in a git repo so only need to bail out
  gitdir="$(git rev-parse --git-dir)" || exit
  local op
  for op in cherry_pick merge rebase revert ; do
      if [ -f "${gitdir}/${op^^}_HEAD" ]; then
          echo "${op/_/-}"
      fi
  done
}

function validate_op() {
  local op="$1"
  if [ -z "$op" ]; then
    echo "No active operation found" >&2
    exit 1
  fi
  if [[ "$(echo "$op" | wc -l)" -gt 1 ]]; then
    echo "Multiple active operations found: $op" >&2
    exit 1
  fi
}

function discover_action() {
    local action=${1/git-/}
    if [ "$action" != "abort" ] && [ "$action" != "continue" ]; then
        echo "Invalid action: $1" >&2
        exit 1
    fi
    echo "$action"
}

action=$(discover_action "$(basename "$0")")
op=$(discover_op)
validate_op "$op"

git "$op" "--$action"
