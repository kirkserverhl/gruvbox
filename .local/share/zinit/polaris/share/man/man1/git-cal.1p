.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "GIT-CAL 1"
.TH GIT-CAL 1 2025-01-13 "perl v5.40.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
git\-cal \- A simple tool to view commits calendar (similar to github contributions calendar) on command line
.SH SYNOPSIS
.IX Header "SYNOPSIS"
"git-cal" is a tool to visualize the git commit history in github's contribution calendar style.
The calendar shows how frequently the commits are made over the past year or some choosen period
Activity can be displayed using ascii, ansi or unicode characters, default is choosen based on ENV
.PP
.Vb 1
\&  git\-cal
\&
\&  git\-cal \-\-period=<1..12, \-11..0>
\&
\&  git\-cal \-\-author=<author>
\&
\&  git\-cal \-\-ascii
\&
\&  git\-cal \-\-ansi
\&
\&  git\-cal \-\-unicode
\&
\&  git\-cal <options> <filepath>
.Ve
.SS OPTIONS
.IX Subsection "OPTIONS"
.IP [\-\-period|\-p]=<n> 4
.IX Item "[--period|-p]=<n>"
Do not show the entire year:
.RS 4
.IP "n = 1 to 12" 4
.IX Item "n = 1 to 12"
Shows only one month (1=Jan .. 12=Dec)
.IP "n = \-11 to 0" 4
.IX Item "n = -11 to 0"
Shows the previous \-n months (and the current month)
.RE
.RS 4
.RE
.IP \-\-author=<author> 4
.IX Item "--author=<author>"
View commits of a particular author.
.IP \-\-all 4
.IX Item "--all"
View stats from all branches.
.IP \-\-ascii 4
.IX Item "--ascii"
Display activity using ASCII characters instead of ANSI colors.
.IP \-\-ansi 4
.IX Item "--ansi"
Display activity using ANSI colors
.IP \-\-unicode 4
.IX Item "--unicode"
Display activity using unicode characters
.IP \-\-help|\-? 4
.IX Item "--help|-?"
Print this message.
.SS "ADDITIONAL OPTIONS"
.IX Subsection "ADDITIONAL OPTIONS"
<filepath> to view the logs of a particular file or directory
.SS "USING GIT CONFIG"
.IX Subsection "USING GIT CONFIG"
git-cal uses the git config tool to store configuration on disk.  Similar keys are used to 
those listed above with the notable exception being the bundling of ascii, ansi and unicode
into a "format" key. Examples of the three supported keys are below.
.PP
.Vb 1
\& git config \-\-global calendar.format ascii
\&
\& git config \-\-global calendar.period 5
\&
\& git config \-\-global calendar.author karthik
.Ve
.PP
A command line supplied option will override the matching option set using this method.
.SH AUTHOR
.IX Header "AUTHOR"
Karthik katooru <karthikkatooru@gmail.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This program is free software; you can redistribute it and/or modify it under the MIT License
