#!/usr/bin/env bash
# reset environment variables that could interfere with normal usage
unset -v GREP_OPTIONS
# put all utility functions here

# make a temporary file
git_extra_mktemp() {
    mktemp -t "$(basename "$0")".XXXXXXX
}

git_extra_default_branch() {
    local extras_default_branch init_default_branch
    extras_default_branch=$(git config --get git-extras.default-branch)
    init_default_branch=$(git config --get init.defaultBranch)
    if [ -n "$extras_default_branch" ]; then
        echo "$extras_default_branch"
    elif [ -n "$init_default_branch" ]; then
        echo "$init_default_branch"
    else
        echo "main"
    fi
}

options=""

usage() {
cat <<HERE
usage: git alias [options]                          # list all aliases
   or: git alias [options] <search-pattern>         # show aliases matching pattern
   or: git alias [options] <alias-name> <command>   # alias a command
options:

    --global  Show or create alias in the system config
    --local   Show or create alias in the repository config
HERE
}

if [[ "$1" == "--local" || "$1" == "--global" ]]; then
    options=$1
    shift
fi

case $# in
  0)
      if [[ -z "$options" ]]; then
        git config --get-regexp 'alias.*' | sed 's/^alias\.//' | sed 's/[ ]/ = /' | sort
      else
        git config "$options" --get-regexp 'alias.*' | sed 's/^alias\.//' | sed 's/[ ]/ = /' | sort
      fi
      ;;
  1)
      if [[ -z "$options" ]]; then
        git config --get-regexp 'alias.*' | sed 's/^alias\.//' | sed 's/[ ]/ = /' | sort | grep -e "$1"
      else
        git config "$options" --get-regexp 'alias.*' | sed 's/^alias\.//' | sed 's/[ ]/ = /' | sort | grep -e "$1"
      fi
      ;;
  2)
      if [[ -z "$options" ]]; then
        git config alias."$1" "$2"
      else
        git config "$options" alias."$1" "$2"
      fi
      ;;
  *) >&2 echo "error: too many arguments." && usage && exit 1 ;;
esac
